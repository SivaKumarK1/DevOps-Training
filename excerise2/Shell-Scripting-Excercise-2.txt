#### Using exit status ###

1. Write a shell script that accepts a file or directory name as an argument. Have the script report
if it is a regular file, a directory, or other type of file. If it is a regular file, exit with a 0 exit status.
If it is a directory, exit with a 1 exit status. If it is some other type of file, exit with a 2 exit status.


2. Write a script that executes the command "cat /etc/shadow". If the command returns a 0 exit
status report "Command succeeded" and exit with a 0 exit status. If the command returns a
non zero exit status report "Command failed" and exit with a 1 exit status.

### Using Functions ####

3. Write a shell script that consists of a function that display the number of files in the present
working directory. Name this function "file_count" and call it in your script. If you use a variable
in your function, remember to make it a local variable.

4. Modify the script from the previous task. Make the "file_count" function accept a directory
as an argument. Next have the function display the name of the directory followed by a colon.
Finally, display the number of files to the screen on the next line. Call the function three times.
First, on the "/etc" directory, next on the "/var" directory and finally on the "/usr/bin" directory.

####  Using Logging #####

5. Write a shell script that displays one random number to the screen and also generates a syslog
message with that random number. Use the "user" facility and the "info" facility for your
messages

6. Modify the previous script so that it uses a logging function. Additionally tag each syslog
message with "randomly" and include the process ID. Generate 3 random numbers.

### Using Debugging ####

7. Write a shell script that exit on error and displays commands as they will execute, including all
expansions and substitutions. Use 3 ls commands in your script. Make the first one succeed,
the second one fail, and the third one succeed. If you are using the proper options, the third ls
command will not be executed.

8. Modify the previous exercise so that script continues, even if an error occurs. This time all three
ls commands will succeed.
